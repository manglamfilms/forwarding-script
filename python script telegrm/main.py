import json
import os
import asyncio
import random
import time
from telethon import TelegramClient, events
from config import API_ID, API_HASH, USERS_FILE

# рдЕрдЧрд░ users.json рдлрд╛рдЗрд▓ рдирд╣реАрдВ рд╣реИ, рддреЛ рдЗрд╕реЗ рдмрдирд╛рдПрдВ
if not os.path.exists(USERS_FILE):
    with open(USERS_FILE, "w") as f:
        json.dump([], f)

# рд╕рднреА рдпреВрдЬрд░реНрд╕ рдХреЛ рд▓реЛрдб рдХрд░реЗрдВ
def load_users():
    with open(USERS_FILE, "r") as f:
        return json.load(f)

# рдирдпрд╛ рдпреВрдЬрд░ рдЬреЛрдбрд╝реЗрдВ
def add_user(phone, session_name):
    users = load_users()
    users.append({"phone": phone, "session": session_name, "source_chats": [], "destination_chats": []})
    with open(USERS_FILE, "w") as f:
        json.dump(users, f, indent=4)

# рд╕реЗрд╢рди рдмрдирд╛рдиреЗ рдХрд╛ рдлрдВрдХреНрд╢рди
async def create_session():
    phone = input("\nЁЯУЮ рдЕрдкрдирд╛ Telegram рдирдВрдмрд░ рдбрд╛рд▓реЗрдВ (рдЙрджрд╛рд╣рд░рдг: +917878066868): ").strip()
    if not phone.startswith("+") or not phone[1:].isdigit():
        print("тЭМ рдХреГрдкрдпрд╛ рд╕рд╣реА рдлрд╝реЙрд░реНрдореЗрдЯ рдореЗрдВ рдирдВрдмрд░ рдбрд╛рд▓реЗрдВ (рдЬреИрд╕реЗ: +917878066868)")
        return

    session_name = phone.replace("+", "").replace(" ", "")
    
    # рд╕реЗрд╢рди рдлреЛрд▓реНрдбрд░ рдмрдирд╛рдПрдБ
    if not os.path.exists("sessions"):
        os.makedirs("sessions")

    client = TelegramClient(f"sessions/{session_name}", API_ID, API_HASH)

    await client.start(phone)
    print("тЬЕ рдирдпрд╛ рд╕реЗрд╢рди рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдмрдирд╛рдпрд╛ рдЧрдпрд╛!")
    add_user(phone, session_name)
    await client.disconnect()

# рдореИрд╕реЗрдЬ рдлреЙрд░рд╡рд░реНрдбрд┐рдВрдЧ рдХреЗ рд▓рд┐рдП рд╕реЗрдЯрдЕрдк
async def setup_forwarding():
    users = load_users()
    if not users:
        print("тЪая╕П рдХреЛрдИ рднреА рдпреВрдЬрд░ рд▓реЙрдЧрд┐рди рдирд╣реАрдВ рд╣реИ, рдкрд╣рд▓реЗ рдирдпрд╛ рд╕реЗрд╢рди рдмрдирд╛рдПрдВред")
        return

    phone = input("ЁЯУЮ рдЬрд┐рд╕ рдирдВрдмрд░ рдХрд╛ рдлреЙрд░рд╡рд░реНрдбрд┐рдВрдЧ рд╕реЗрдЯрдЕрдк рдХрд░рдирд╛ рд╣реИ, рдЙрд╕реЗ рджрд░реНрдЬ рдХрд░реЗрдВ: ").strip()
    user = next((u for u in users if u["phone"] == phone), None)

    if not user:
        print("тЭМ рдпрд╣ рдирдВрдмрд░ рдкрд╣рд▓реЗ рд▓реЙрдЧрд┐рди рдирд╣реАрдВ рд╣реБрдЖ! рдкрд╣рд▓реЗ рдирдпрд╛ рд╕реЗрд╢рди рдмрдирд╛рдПрдВред")
        return

    session_name = user["session"]
    client = TelegramClient(f"sessions/{session_name}", API_ID, API_HASH)
    await client.start()

    try:
        source_chats = list(map(int, input("ЁЯУе SOURCE_CHAT IDs (рдХреЙрдорд╛ рд╕реЗ рдЕрд▓рдЧ рдХрд░реЗрдВ): ").split(",")))
        destination_chats = list(map(int, input("ЁЯУд DESTINATION_CHAT IDs (рдХреЙрдорд╛ рд╕реЗ рдЕрд▓рдЧ рдХрд░реЗрдВ): ").split(",")))
    except ValueError:
        print("тЭМ рдХреГрдкрдпрд╛ рдХреЗрд╡рд▓ рд╕рдВрдЦреНрдпрд╛рдПрдБ рджрд░реНрдЬ рдХрд░реЗрдВ!")
        return

    user["source_chats"] = source_chats
    user["destination_chats"] = destination_chats
    with open(USERS_FILE, "w") as f:
        json.dump(users, f, indent=4)

    print("тЬЕ рдлреЙрд░рд╡рд░реНрдбрд┐рдВрдЧ рд╕реЗрдЯрдЕрдк рдкреВрд░рд╛ рд╣реЛ рдЧрдпрд╛!")
    await client.disconnect()

# рд╕рднреА рдХреНрд▓рд╛рдЗрдВрдЯреНрд╕ рдХреЛ рд╕реНрдЯрд╛рд░реНрдЯ рдХрд░рдиреЗ рдХрд╛ рдлрдВрдХреНрд╢рди
async def start_forwarding():
    users = load_users()
    if not users:
        print("тЪая╕П рдХреЛрдИ рднреА рдпреВрдЬрд░ рд▓реЙрдЧрд┐рди рдирд╣реАрдВ рд╣реИ, рдкрд╣рд▓реЗ рдирдпрд╛ рд╕реЗрд╢рди рдмрдирд╛рдПрдВред")
        return

    clients = []

    for user in users:
        if not user.get("source_chats") or not user.get("destination_chats"):
            print(f"тЪая╕П {user['phone']} рдХреЗ рд▓рд┐рдП рдлреЙрд░рд╡рд░реНрдбрд┐рдВрдЧ рд╕реЗрдЯрдЕрдк рдирд╣реАрдВ рд╣реИ!")
            continue

        client = TelegramClient(f"sessions/{user['session']}", API_ID, API_HASH)
        await client.start()

        @client.on(events.NewMessage(chats=user["source_chats"]))
        async def handler(event, user=user):
            print(f"ЁЯУй рдирдпрд╛ рдореИрд╕реЗрдЬ {user['phone']} рд╕реЗ рдЖрдпрд╛: {event.message.text}")

            for dest in user["destination_chats"]:
                try:
                    await client.send_message(dest, event.message)
                    print(f"тЬЕ рдореИрд╕реЗрдЬ {dest} рдХреЛ рдлреЙрд░рд╡рд░реНрдб рдХрд░ рджрд┐рдпрд╛ рдЧрдпрд╛!")

                    # **рд╕реБрд░рдХреНрд╖рд┐рдд рдлреЙрд░рд╡рд░реНрдбрд┐рдВрдЧ рд▓рд┐рдорд┐рдЯ** (3-5 рд╕реЗрдХрдВрдб рдХреЗ рдмреАрдЪ рдХрд╛ рд░реИрдВрдбрдо рдбрд┐рд▓реЗ)
                    delay = random.uniform(3, 5)
                    print(f"тП│ рдЕрдЧрд▓рд╛ рдореИрд╕реЗрдЬ рднреЗрдЬрдиреЗ рд╕реЗ рдкрд╣рд▓реЗ {delay:.2f} рд╕реЗрдХрдВрдб рдХрд╛ рдЗрдВрддрдЬрд╛рд░ рдХрд░ рд░рд╣реЗ рд╣реИрдВ...")
                    await asyncio.sleep(delay)

                except Exception as e:
                    print(f"тЪая╕П {dest} рдХреЛ рдореИрд╕реЗрдЬ рднреЗрдЬрдиреЗ рдореЗрдВ рджрд┐рдХреНрдХрдд: {str(e)}")

        clients.append(client)

    print("ЁЯЪА рд╕рднреА рдпреВрдЬрд░реНрд╕ рдХреЗ рд▓рд┐рдП рдмреЙрдЯ рд▓рд╛рдЗрд╡ рд╣реИ!")

    await asyncio.gather(*(client.run_until_disconnected() for client in clients))

# рдореЗрди рдСрдкреНрд╢рди рджрд┐рдЦрд╛рдирд╛
async def main():
    while True:
        print("\nЁЯФ╣ Telegram Forwarding Bot ЁЯФ╣\n")
        print("1я╕ПтГг рдирдпрд╛ Telegram рд╕реЗрд╢рди рдмрдирд╛рдПрдВ")
        print("2я╕ПтГг рдореИрд╕реЗрдЬ рдлреЙрд░рд╡рд░реНрдбрд┐рдВрдЧ рд╕реЗрдЯ рдХрд░реЗрдВ")
        print("3я╕ПтГг рдмреЙрдЯ рдХреЛ рд╢реБрд░реВ рдХрд░реЗрдВ")
        print("4я╕ПтГг рдПрдЧреНрдЬрд╝рд┐рдЯ рдХрд░реЗрдВ")

        choice = input("тЮбя╕П рдЕрдкрдирд╛ рдСрдкреНрд╢рди рдЪреБрдиреЗрдВ (1/2/3/4): ").strip()

        if choice == "1":
            await create_session()
        elif choice == "2":
            await setup_forwarding()
        elif choice == "3":
            await start_forwarding()
        elif choice == "4":
            print("ЁЯСЛ рдмреЙрдЯ рдмрдВрдж рдХрд┐рдпрд╛ рдЬрд╛ рд░рд╣рд╛ рд╣реИред")
            break
        else:
            print("тЭМ рдЧрд▓рдд рдЗрдирдкреБрдЯ! рдХреГрдкрдпрд╛ 1, 2, 3, рдпрд╛ 4 рдЪреБрдиреЗрдВред")

# рдмреЙрдЯ рдХреЛ рд╕реНрдЯрд╛рд░реНрдЯ рдХрд░реЗрдВ
if __name__ == "__main__":
    asyncio.run(main())
